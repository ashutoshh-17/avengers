import java.io.*;
public class strf {
    public static void main(String args[]) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n;
        System.out.println("Please enter the number of Processes: ");
        n = Integer.parseInt(br.readLine());
        
        int proc[][] = new int[n + 1][5];
        int burstTime[] = new int[n + 1];
        
        for (int i = 1; i <= n; i++) {
            System.out.println("Please enter the Arrival Time for Process " + i + ": ");
            proc[i][0] = Integer.parseInt(br.readLine());
            System.out.println("Please enter the Burst Time for Process " + i + ": ");
            burstTime[i] = proc[i][1] = Integer.parseInt(br.readLine());
        }
        
        System.out.println("\nProcess Timeline\n");
        int total_time = 0;
        for (int i = 1; i <= n; i++) {
            total_time += burstTime[i];
        }

        int time_chart[] = new int[total_time];

        for (int i = 0; i < total_time; i++) {
            int sel_proc = -1;
            int min = Integer.MAX_VALUE;
            
            for (int j = 1; j <= n; j++) {  
                if (proc[j][0] <= i && proc[j][1] > 0 && proc[j][1] < min) {
                    min = proc[j][1];
                    sel_proc = j;
                }
            }
            
            if (sel_proc == -1) {
                continue;
            }

            time_chart[i] = sel_proc;
            proc[sel_proc][1]--;

            if (proc[sel_proc][1] == 0) {
                proc[sel_proc][4] = i + 1;
            }

            for (int j = 1; j <= n; j++) {
                if (proc[j][0] <= i) {
                    if (proc[j][1] != 0) {
                        proc[j][3]++;
                        if (j != sel_proc) {
                            proc[j][2]++;
                        }
                    } else if (j == sel_proc) {
                        proc[j][3]++;
                    }
                }
            }

            if (i != 0) {
                if (sel_proc != time_chart[i - 1]) {
                    System.out.print(" " + i + " | P[" + sel_proc + "]");
                }
            } else {
                System.out.print(" " + i + " | P[" + sel_proc + "]");
            }
            if (i == total_time - 1) {
                System.out.print(" " + (i + 1));
            }
        }

        System.out.println("\n\n");
        System.out.println("PID\tArrival Time\tBurst Time\tCompletion Time\tWaiting Time\tTurnaround Time");
        
        for (int i = 1; i <= n; i++) {
            System.out.printf("%d\t%2dms\t\t%2dms\t\t%2dms\t\t%2dms\t\t%2dms",
                i, proc[i][0], burstTime[i], proc[i][4], proc[i][2], proc[i][3]);
            System.out.println();
        }
        
        float totalWT = 0, totalTT = 0;
        for (int i = 1; i <= n; i++) {
            totalWT += proc[i][2];
            totalTT += proc[i][3];
        }
        float avgWT = totalWT / n;
        float avgTT = totalTT / n;
        
        System.out.println("\nThe Average Waiting Time is: " + avgWT + "ms");
        System.out.println("The Average Turnaround Time is: " + avgTT + "ms");
    }
}





//inp 3. 0. 7. 2. 4. 4. 1.